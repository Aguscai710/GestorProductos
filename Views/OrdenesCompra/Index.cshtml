@model IEnumerable<PNT1_Grupo6.ViewModels.OrdenCompraViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Ordenes de compra</h1>
@if (TempData["OrdenCompraError"] != null)
{
    <div class="alert alert-danger">
        @TempData["OrdenCompraError"]
    </div>
}
<p>
    <a class="btn-create" asp-action="Create">Crear nuevo</a>
</p>

<p>
    Ordenar por:
    <select id="orderBySelect">
        <option value="">Seleccionar...</option>
        <option value="NumeroOrden">Número de Orden</option>
        <option value="MayorPrecioTotal">Mayor Precio Total</option>
        <option value="MenorPrecioTotal">Menor Precio Total</option>
        <option value="Producto">Nombre de Producto</option>
        <option value="Proveedor">Nombre de Proveedor</option>
    </select>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProveedorId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NombreProveedor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductoId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NombreProducto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrecioUnitario)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cantidad)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PrecioTotal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProveedorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProveedor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProveedorId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProducto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrecioUnitario)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cantidad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PrecioTotal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                <a class="verde" asp-action="Edit" asp-route-id="@item.Id">Editar</a> |
                <a class="amarillo" asp-action="Details" asp-route-id="@item.Id">Info</a> |
                <a class="rojo" asp-action="Delete" asp-route-id="@item.Id">Eliminar</a>
            </td>
        </tr>
        }
    </tbody>
</table>

<div>
    <h2>Resumen de Datos</h2>
    <p>Número total de órdenes: @Model.Count()</p>
    <p>Número de órdenes por estado:</p>
    <ul>
        @foreach (EstadoOrdenCompra estado in Enum.GetValues(typeof(EstadoOrdenCompra)))
        {
            <li>@estado.ToString(): @Model.Count(o => o.Estado == estado)</li>
        }
    </ul>
    <p>Producto más pedido: @Model.OrderByDescending(o => o.Cantidad).FirstOrDefault()?.NombreProducto</p>
    <p>Proveedor más elegido: @Model.GroupBy(o => o.NombreProveedor).OrderByDescending(g => g.Count()).FirstOrDefault()?.Key</p>
</div>

@section Scripts {
    <script>
            document.getElementById('orderBySelect').addEventListener('change', function () {
                var selectedValue = this.value;
                var url = '@Url.Action("Index", new { orderBy = "placeholder" })';
                window.location.href = url.replace("placeholder", selectedValue);
            });
    </script>
}



<style>
    .table{
        
    }
    .fondo-tabla {
        background-color: darkgray;
        border: 3px solid black;
    }

    .blanco {
        color: white;
    }

    .btn-create {
        display: inline;
        padding: 8px 16px;
        background-color: green;
        color: white;
        text-decoration: none;
        border-radius: 5px;
        margin-left: 400px;
    }

        .btn-create:hover {
            color: black;
            text-decoration: none;
        }

    h1 {
        display: inline;
    }

    .verde {
        padding: 2px 4px;
        background-color: green;
        color: black;
        text-decoration: none;
        border-radius: 15px;
        margin:2px;
    }

    .amarillo {
        padding: 2px 4px;
        background-color: yellow;
        color: black;
        text-decoration: none;
        border-radius: 15px;
        margin: 2px;
    }

    .rojo {
        padding: 2px 4px;
        background-color: red;
        color: black;
        text-decoration: none;
        border-radius: 15px;

    }
    .table {
        border: 3px solid black;
    }
</style>